Columbia CBMFW4761 Final Project--Transcriptional Profiling of Complex Communities--README
---

--
Guide to Files

sra_list.doc: List of accession numbers of metagenomic and metatranscriptomic datasets used.

Folder Ftsz_Linkage: Output and analysis of running mOTUs2 with a marker gene HMM replaced by the ftsZ HMM on a sample metagenomic dataset of 87 simulated species. 
	Linkage_With_FtsZ.ipynb: processes sam file to generate simulated_87_COG0099_counts.txt then plots abundances to try to form linkage groups (figure 1b)
	gutSimulation_profile: Output of running mOTUs2 on the simulated dataset.
	filtered.COG0099.sam: sam file output from MOCAT alignment of dataset to ftsZ (substituted for COG0099)
	simulated_87_COG0099_counts.txt: Output of using Python code for getting count data from the mOTUs output

Folder HUMAnN2: 
	Humann2_Metatranscriptome_Analysis.ipynb: Jupyter notebook with code for analyzing the output of Human2 and generating supplementary figure 5.
	SRR769418_kneaddata_genefamilies.tsv: HUMAnN2 output file providing UniRef IDs for identified proteins and species information where available

Folder Marker_Gene_Expression: Code and output for analyzing differential expression of the 10 marker genes.
	Marker_Gene_Differential_Expression.ipynb: creates expression matrices and plots expression levels of marker genes in metagenomes and metatranscriptomes (generates supplementary figures 2 and 3)
	indiv1_indiv2_differential_expression.R: R script for differential expression testing and volcano plot (generates supplementary figure 4)
	[SRA]_normalized_matrix.txt: gene counts after normalizing to genome abundance (generated by python notebook)
	[SRA]_expression_matrix.txt: gene counts without normalizing to genome abundance (generated by python notebook)
	[SRA]_profile.txt: profile of species abundances generated by mOTUs2
	[SRA]_mgc.txt: mOTUs2 output containing abundances of each marker gene ("-M" option)
	[SRA]_MGC_OTUs.txt: mOTUs output containing abundances of each marker gene appended with the corresponding OTU ID (generated by python notebook)
	mOTU-LG.map.tsv: file included in mOTUs2 download containing the corresponding OTU IDs for each marker gene

Folder Merge_Profiles_and_Spearman_Correlations: mOTUs and metaPhlAn profiling output of matched metagenomic and metatranscriptomic data and analysis of accuracy.
	Folder metaphlan_genomic_output: Output of metaPhlAn profiling on the metagenomic datasets.
	Folder metaphlan_transcriptomes: Output of metaPhlAn profiling on the metatranscriptomic datasets.
	Folder motus_genomic_output: Output of mOTUs2 profiling of the metagenomic datasets.
	Folder motus_transcriptomes: Output of mOTUs2 profiling of the metatranscriptomic datasets. 
	Merge_Metaphlan.ipynb: Python code to reorder MetaPhlAn profile output by species presence/absence.
	mOTUs_Transformed_Data.xlsx: mOTUs metagenomic and metatranscriptomic profiling outputs, addition of pseudocounts, log transformation, and counts of number of species identified in each output.
	Count_Species_Metaphlan_mOTUs.xlsx: Counts of species identified by each method in the data and generation of supplementary figure 1.
	mOTUs_Coefficient_Analysis.pzfx: Graphpad Prism file to determine Spearman correlations of matched metagenomic and metatranscriptomic profiles, Wilcoxon signed rank test for significance, and generate Figure 1A.



--
Commands and Implementation


Downloading metagenome and metatranscriptome files listed in sra_list
	1. Download and install SRA toolkit (https://www.ncbi.nlm.nih.gov/sra/docs/toolkitsoft/)
	2. COMMAND: fastq-dump [SRA]

Quality filtering of metagenome and metatranscriptome files
	1. Install kneaddata (http://huttenhower.sph.harvard.edu/kneaddata)
	2. Download human reference database
		COMMAND: kneaddata_database --download human bowtie2 kneaddata_setup	
	3. Filter/trim fastq files (removes human sequences and adapters)
		COMMAND: kneaddata --input --reference-db kneaddata_setup --output kneaddata_output

Generate mOTUs2 profiles:
	1. Install mOTUs_v2 (https://motu-tool.org/installation.html)
	2. Generate profiles for all samples in sra_list
		COMMAND: motus profile -s [SRA]_kneaddata.fastq > motus_output/[SRA]_kneaddata_motu.txt

Generate MetaPhlAn2 profiles:
	1. Install MetaPhlAn2 (http://huttenhower.sph.harvard.edu/metaphlan2)
	2. Generate profiles for all samples in sra_list
		COMMAND: metaphlan2.py --input_type fastq [SRA]_kneaddata.fastq > metaphlan_output/[SRA]_kneaddata_metaphlan.txt

Merge profiles, calculate correlation, and count OTUs - see Merge_Profiles_and_Spearman_Correlations folder
	1. Merge the metagenome and metatranscriptome profile for each samples 
		See mOTUs_Transformed_Data.xlsx for mOTUs merging
	 	Run Merge_Metaphlan.ipynb
	2. Plot correlations and calculate spearmans correlation - see mOTUs_Coefficient_Analysis (Prism 8 file)
	3. Count total OTUs for each sample/method - see Count_Species_Metaphlan_mOTUs.xlsx

Run HUMAnN2 - see HUMAnN2 folder
	1. Install HUMAnN2 (http://huttenhower.sph.harvard.edu/humann2)
	2. Run HUMAnN2 for metatranscriptome SRR769418
		COMMAND: humann2 --protein-database [PATH]/humann2_database_downloads/uniref --input SRR769418_kneaddata.fastq --output .
		COMMAND: humann2_rename_table --input SRX247403_genefamilies.tsv --output SRX247403_genefamilies-names.tsv --names uniref90
	3. Plot total transcript abundances for identified reference OTUs - see Humann2_Metatranscriptome_Analysis.ipynb

Differential Expression of 10 Marker Genes - see Marker_Gene_Expression
	1. Run Marker_Gene_Differential_Expression.ipynb to generate count matrices of marker genes and visualize variance of marker genes in metatranscriptomes vs metagenomes 
		files generated by this code are already present in the folder
	2. Run indiv1_indiv2_differential_expression.R to find marker genes differentially expressed between metatranscriptomes of 2 individuals and generate volcano plot

Add ftsZ to mOTUs database (see FtsZ_Linkage folder)—Redoing Pipeline
	1. Download and install MOCAT2 tool (https://mocat.embl.de/)
	2. Generate hmm profile from alignments
		Download ftsZ alignment of 1663 reference organisms (http://eggnogdb.embl.de/#/app/guided_search  - using E coli as query organism) 
		Install hmmer-3.0 (http://hmmer.org/)
		COMMAND: hmmbuild -o COG0099.hmm ENOG4105CDK_ftsz_fasta_trimmed_align.txt
	3. Install fetchMG (http://vm-lux.embl.de/~mende/fetchMG/download.html)
	4. In fetchMG folder, replace COG0099.hmm file with new ftsZ ortholog COG0099.hmm file
		COMMAND: cd lib
		COMMAND: rm COG0099.hmm
		COMMAND: cp [path]/COG0099.hmm . 
	5. Run fetchMG using example datasets included in installation
		COMMAND: ./fetchMG.pl -m extraction example_datasets/example_data.faa -o extract_with_ftszCOG0099
	5.1. Alternately, if starting with raw metagenomic data, run fetchMG as part of MOCAT pipeline on unassembled metagenomic reads: process and assemble the sample simulated 87 reads, predict genes, and fetch MG sequences.
		Replace the hmm file as above in the fetchMG folder of MOCAT.
		COMMAND: cd MOCAT/article_datasets/simulated_metagenome_87 
		Make a text file “sample” that has one line of text, “87_species”.
		COMMAND: MOCAT.pl -sf sample -rtf 
		COMMAND: MOCAT.pl -sf sample -a 
		COMMAND: MOCAT.pl -sf sample -gp assembly 
		COMMAND: MOCAT.pl -sf sample fmg assembly
	6. Cluster ortholog sequences with usearch
		COMMAND: ./usearch -cluster_fast extract_with_ftszCOG0099/COG0099.fna -id 0.9 -centroid COG0099_nr.fna
	7. Copy COG0099_nr.fna into MOCAT folder containing references for alignment
		COMMAND: cp COG0099_nr.fa MOCAT/data
	8. Make bwt files for COG0099 alignment
		COMMAND: cd MOCAT/data
		COMMAND: ../bin/2bwt-builder COG0099.fna
	9. Run MOCAT using COG0099 as a reference
		COMMAND: cd ../article_datasets/simulated_metagenome_87
		COMMAND: MOCAT.pl -sf sample -p COG0099.fna -identity 97 -mode mOTU -o RESULTS
	10. To make linkage groups, find OTUs by running mOTUs2
		COMMAND: motus profile -f gutSimulation3.pair.1.fq.gz -r gutSimulation3.pair.2.fq.gz -M gutSimulation_otu_MG.txt -o gutSimulation_profile.txt > gutSimulation_profile.txt
	11. Convert bam output file to sam then use Linkage_With_FtsZ.ipynb to calculate counts and plot for linkage groups
		COMMAND: cd 87_species/reads.filtered.COG0099.fna.fastx
		COMMAND: samtools view 87_species.filtered.screened.reads.processed.on.COG0099.fna.fastx.allbest.l45.p97.bam > filtered.COG0099.sam


Add ftsZ to mOTUs database (see FtsZ_Linkage folder)—Extending Database Tool
	1. Download and install mOTUs extension script (https://motu-tool.org/installation.html)
		Follow instructions included in download for installations
	2. Replace COG0012.hmm with the ftsZ HMM file.
	3. Run the extender (run fetchMGs, create new mOTUs database, replace the original database) on the provided 9 test genomes.
		COMMAND: for i in $(cat extend_mOTUs_DB/TEST/genomes.list); do ./extend_mOTUs_DB/SCRIPTS/extend_mOTUs_addGenome.sh extend_mOTUs_DB/TEST/genomes/$i.fasta $i newdbfolder extend_mOTUs_DB/SCRIPTS/ $MOTUS_DIR; done
		COMMAND: ./extend_mOTUs_DB/SCRIPTS/extend_mOTUs_generateDB.sh extend_mOTUs_DB/TEST/genomes.list newdbname extend_mOTUs_DB/TEST/taxonomy_file.txt newdbfolder extend_mOTUs_DB/SCRIPTS/ $MOTUS_DIR
		COMMAND: cp -r newdbfolder/newdbname/db_mOTU $MOTUS_DIR 


